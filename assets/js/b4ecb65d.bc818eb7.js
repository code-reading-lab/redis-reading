"use strict";(self.webpackChunkredis_reading=self.webpackChunkredis_reading||[]).push([[6315],{841:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"redis-ae-examples","metadata":{"permalink":"/redis-reading/blog/redis-ae-examples","editUrl":"https://github.com/code-reading-lab/redis-reading/tree/docs/blog/2023-04-04-redis-ae-examples.md","source":"@site/blog/2023-04-04-redis-ae-examples.md","title":"\u5982\u4f55\u4f7f\u7528 AE \u5b9e\u73b0\u7f51\u7edc\u7f16\u7a0b\u3001\u591a\u7ebf\u7a0b\u7f16\u7a0b\u548c\u5f02\u6b65\u7f16\u7a0b\u7b49\u65b9\u9762\u7684\u5e94\u7528","description":"\u4ee5\u4e0b\u662f\u4e00\u4e9b\u4f7f\u7528 AE \u5b9e\u73b0\u7f51\u7edc\u7f16\u7a0b\u3001\u591a\u7ebf\u7a0b\u7f16\u7a0b\u548c\u5f02\u6b65\u7f16\u7a0b\u7b49\u65b9\u9762\u5e94\u7528\u7684\u793a\u4f8b\u3002","date":"2023-04-04T00:00:00.000Z","formattedDate":"April 4, 2023","tags":[{"label":"redis","permalink":"/redis-reading/blog/tags/redis"},{"label":"ae","permalink":"/redis-reading/blog/tags/ae"},{"label":"tcp","permalink":"/redis-reading/blog/tags/tcp"}],"readingTime":3.675,"hasTruncateMarker":false,"authors":[{"name":"Henry Tien","title":"SDE","url":"https://github.com/henrytien","image_url":"https://github.com/henrytien.png","imageURL":"https://github.com/henrytien.png"}],"frontMatter":{"slug":"redis-ae-examples","title":"\u5982\u4f55\u4f7f\u7528 AE \u5b9e\u73b0\u7f51\u7edc\u7f16\u7a0b\u3001\u591a\u7ebf\u7a0b\u7f16\u7a0b\u548c\u5f02\u6b65\u7f16\u7a0b\u7b49\u65b9\u9762\u7684\u5e94\u7528","authors":{"name":"Henry Tien","title":"SDE","url":"https://github.com/henrytien","image_url":"https://github.com/henrytien.png","imageURL":"https://github.com/henrytien.png"},"tags":["redis","ae","tcp"]},"nextItem":{"title":"Welcome","permalink":"/redis-reading/blog/welcome"}},"content":"\u4ee5\u4e0b\u662f\u4e00\u4e9b\u4f7f\u7528 AE \u5b9e\u73b0\u7f51\u7edc\u7f16\u7a0b\u3001\u591a\u7ebf\u7a0b\u7f16\u7a0b\u548c\u5f02\u6b65\u7f16\u7a0b\u7b49\u65b9\u9762\u5e94\u7528\u7684\u793a\u4f8b\u3002\\r\\n## \u7f51\u7edc\u7f16\u7a0b\uff1a\\r\\n\u4f7f\u7528 AE \u53ef\u4ee5\u65b9\u4fbf\u5730\u5b9e\u73b0\u7f51\u7edc\u7f16\u7a0b\uff0c\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528 AE \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684 TCP \u670d\u52a1\u5668\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n### \u670d\u52a1\u7aef\u4ee3\u7801\\r\\n```c\\r\\n#include <stdio.h>\\r\\n#include <stdlib.h>\\r\\n#include <string.h>\\r\\n#include <errno.h>\\r\\n#include <sys/socket.h>\\r\\n#include <arpa/inet.h>\\r\\n#include \\"ae.h\\"\\r\\n\\r\\n#define PORT 5000\\r\\n\\r\\n// accept \u56de\u8c03\u51fd\u6570\uff0c\u7528\u4e8e\u63a5\u6536\u65b0\u8fde\u63a5\\r\\nvoid acceptTcpHandler(aeEventLoop *loop, int fd, void *clientdata, int mask) {\\r\\n    // \u63a5\u6536\u65b0\u8fde\u63a5\\r\\n    int clientfd = accept(fd, NULL, NULL);\\r\\n    if (clientfd == -1) {\\r\\n        fprintf(stderr, \\"accept failed, errno: %d\\\\n\\", errno);\\r\\n        return;\\r\\n    }\\r\\n    // \u4e3a\u65b0\u8fde\u63a5\u6dfb\u52a0\u8bfb\u4e8b\u4ef6\\r\\n    aeCreateFileEvent(loop, clientfd, AE_READABLE, readTcpHandler, NULL);\\r\\n}\\r\\n\\r\\n// \u8bfb\u4e8b\u4ef6\u56de\u8c03\u51fd\u6570\uff0c\u7528\u4e8e\u63a5\u6536\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u6570\u636e\\r\\nvoid readTcpHandler(aeEventLoop *loop, int fd, void *clientdata, int mask) {\\r\\n    char buffer[1024];\\r\\n    // \u8bfb\u53d6\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u6570\u636e\\r\\n    int nread = read(fd, buffer, sizeof(buffer));\\r\\n    if (nread == -1) {\\r\\n        fprintf(stderr, \\"read failed, errno: %d\\\\n\\", errno);\\r\\n        close(fd);\\r\\n        aeDeleteFileEvent(loop, fd, AE_READABLE);\\r\\n        return;\\r\\n    } else if (nread == 0) {\\r\\n        close(fd);\\r\\n        aeDeleteFileEvent(loop, fd, AE_READABLE);\\r\\n        return;\\r\\n    }\\r\\n    buffer[nread] = \'\\\\0\';\\r\\n    // \u6253\u5370\u63a5\u6536\u5230\u7684\u6570\u636e\\r\\n    printf(\\"read data: %s\\\\n\\", buffer);\\r\\n}\\r\\n\\r\\nint main() {\\r\\n    // \u521b\u5efa AE \u5b9e\u4f8b\\r\\n    aeEventLoop *loop = aeCreateEventLoop(1024);\\r\\n    if (loop == NULL) {\\r\\n        fprintf(stderr, \\"create event loop failed\\\\n\\");\\r\\n        exit(EXIT_FAILURE);\\r\\n    }\\r\\n    // \u521b\u5efa\u76d1\u542c\u5957\u63a5\u5b57\\r\\n    int sockfd = socket(AF_INET, SOCK_STREAM, 0);\\r\\n    if (sockfd == -1) {\\r\\n        fprintf(stderr, \\"create socket failed, errno: %d\\\\n\\", errno);\\r\\n        exit(EXIT_FAILURE);\\r\\n    }\\r\\n    // \u7ed1\u5b9a\u76d1\u542c\u5957\u63a5\u5b57\u5230\u6307\u5b9a\u7aef\u53e3\\r\\n    struct sockaddr_in addr;\\r\\n    memset(&addr, 0, sizeof(addr));\\r\\n    addr.sin_family = AF_INET;\\r\\n    addr.sin_addr.s_addr = htonl(INADDR_ANY);\\r\\n    addr.sin_port = htons(PORT);\\r\\n    if (bind(sockfd, (struct sockaddr*)&addr, sizeof(addr)) == -1) {\\r\\n        fprintf(stderr, \\"bind failed, errno: %d\\\\n\\", errno);\\r\\n        exit(EXIT_FAILURE);\\r\\n    }\\r\\n    // \u5f00\u59cb\u76d1\u542c\\r\\n    if (listen(sockfd, 1024) == -1) {\\r\\n        fprintf(stderr, \\"listen failed, errno: %d\\\\n\\", errno);\\r\\n        exit(EXIT_FAILURE);\\r\\n    }\\r\\n    // \u4e3a\u76d1\u542c\u5957\u63a5\u5b57\u6dfb\u52a0\u8bfb\u4e8b\u4ef6\\r\\n    if (aeCreateFileEvent(loop, sockfd, AE_READABLE, acceptTcpHandler, NULL) == -1) {\\r\\n        fprintf(stderr, \\"create file event failed, errno: %d\\\\n\\", errno);\\r\\n        exit(EXIT_FAILURE);\\r\\n    }\\r\\n    // \u8fdb\u5165\u4e8b\u4ef6\u5faa\u73af\\r\\n    aeMain(loop);\\r\\n    // \u9500\u6bc1 AE \u5b9e\u4f8b\\r\\n    aeDeleteEventLoop(loop);\\r\\n    return 0;\\r\\n}\\r\\n```\\r\\n\\r\\n### \u5ba2\u6237\u7aef\u4ee3\u7801\\r\\n```c\\r\\n#include <stdio.h>\\r\\n#include <stdlib.h>\\r\\n#include <string.h>\\r\\n#include <errno.h>\\r\\n#include <sys/socket.h>\\r\\n#include <arpa/inet.h>\\r\\n#include <unistd.h>\\r\\n\\r\\n#define SERVER_IP \\"127.0.0.1\\"\\r\\n#define SERVER_PORT 5000\\r\\n\\r\\nint main() {\\r\\n    // \u521b\u5efa\u5957\u63a5\u5b57\\r\\n    int sockfd = socket(AF_INET, SOCK_STREAM, 0);\\r\\n    if (sockfd == -1) {\\r\\n        fprintf(stderr, \\"create socket failed, errno: %d\\\\n\\", errno);\\r\\n        exit(EXIT_FAILURE);\\r\\n    }\\r\\n    // \u8fde\u63a5\u670d\u52a1\u5668\\r\\n    struct sockaddr_in addr;\\r\\n    memset(&addr, 0, sizeof(addr));\\r\\n    addr.sin_family = AF_INET;\\r\\n    addr.sin_addr.s_addr = inet_addr(SERVER_IP);\\r\\n    addr.sin_port = htons(SERVER_PORT);\\r\\n    int ret = connect(sockfd, (struct sockaddr*)&addr, sizeof(addr));\\r\\n    if (ret == -1) {\\r\\n        if (errno == EINPROGRESS) {\\r\\n            // \u8fde\u63a5\u6b63\u5728\u8fdb\u884c\u4e2d\uff0c\u9700\u8981\u7b49\u5f85\u8fde\u63a5\u5b8c\u6210\u6216\u8005\u8d85\u65f6\\r\\n            fd_set rset, wset;\\r\\n            FD_ZERO(&rset);\\r\\n            FD_SET(sockfd, &rset);\\r\\n            wset = rset;\\r\\n            struct timeval tv;\\r\\n            tv.tv_sec = 5; // \u8d85\u65f6\u65f6\u95f4 5 \u79d2\\r\\n            tv.tv_usec = 0;\\r\\n            ret = select(sockfd + 1, &rset, &wset, NULL, &tv);\\r\\n            if (ret == -1) {\\r\\n                fprintf(stderr, \\"select failed, errno: %d\\\\n\\", errno);\\r\\n                close(sockfd);\\r\\n                exit(EXIT_FAILURE);\\r\\n            } else if (ret == 0) {\\r\\n                fprintf(stderr, \\"connect timeout\\\\n\\");\\r\\n                close(sockfd);\\r\\n                exit(EXIT_FAILURE);\\r\\n            } else {\\r\\n                int error = 0;\\r\\n                socklen_t len = sizeof(error);\\r\\n                getsockopt(sockfd, SOL_SOCKET, SO_ERROR, &error, &len);\\r\\n                if (error != 0) {\\r\\n                    fprintf(stderr, \\"connect failed, errno: %d\\\\n\\", error);\\r\\n                    close(sockfd);\\r\\n                    exit(EXIT_FAILURE);\\r\\n                }\\r\\n            }\\r\\n        } else {\\r\\n            fprintf(stderr, \\"connect failed, errno: %d\\\\n\\", errno);\\r\\n            close(sockfd);\\r\\n            exit(EXIT_FAILURE);\\r\\n        }\\r\\n    }\\r\\n    // \u53d1\u9001\u6570\u636e\\r\\n    const char *data = \\"hello, world\\";\\r\\n    int nwrite = write(sockfd, data, strlen(data));\\r\\n    if (nwrite == -1) {\\r\\n        fprintf(stderr, \\"write failed, errno: %d\\\\n\\", errno);\\r\\n        close(sockfd);\\r\\n        exit(EXIT_FAILURE);\\r\\n    }\\r\\n    // \u63a5\u6536\u6570\u636e\\r\\n    char buffer[1024];\\r\\n    int nread = read(sockfd, buffer, sizeof(buffer));\\r\\n    if (nread == -1) {\\r\\n        fprintf(stderr, \\"read failed, errno: %d\\\\n\\", errno);\\r\\n        close(sockfd);\\r\\n        exit(EXIT_FAILURE);\\r\\n    } else if (nread == 0) {\\r\\n        fprintf(stderr, \\"server closed connection\\\\n\\");\\r\\n        close(sockfd);\\r\\n        exit(EXIT_FAILURE);\\r\\n    }\\r\\n    buffer[nread] = \'\\\\0\';\\r\\n    // \u6253\u5370\u63a5\u6536\u5230\u7684\u6570\u636e\\r\\n    printf(\\"received data: %s\\\\n\\", buffer);\\r\\n    // \u5173\u95ed\u5957\u63a5\u5b57\\r\\n    close(sockfd);\\r\\n    return 0;\\r\\n}\\r\\n```"},{"id":"welcome","metadata":{"permalink":"/redis-reading/blog/welcome","editUrl":"https://github.com/code-reading-lab/redis-reading/tree/docs/blog/2021-08-26-welcome/index.md","source":"@site/blog/2021-08-26-welcome/index.md","title":"Welcome","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2021-08-26T00:00:00.000Z","formattedDate":"August 26, 2021","tags":[{"label":"facebook","permalink":"/redis-reading/blog/tags/facebook"},{"label":"hello","permalink":"/redis-reading/blog/tags/hello"},{"label":"docusaurus","permalink":"/redis-reading/blog/tags/docusaurus"}],"readingTime":0.405,"hasTruncateMarker":false,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","imageURL":"https://github.com/slorber.png","key":"slorber"},{"name":"Yangshun Tay","title":"Front End Engineer @ Facebook","url":"https://github.com/yangshun","imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["slorber","yangshun"],"tags":["facebook","hello","docusaurus"]},"prevItem":{"title":"\u5982\u4f55\u4f7f\u7528 AE \u5b9e\u73b0\u7f51\u7edc\u7f16\u7a0b\u3001\u591a\u7ebf\u7a0b\u7f16\u7a0b\u548c\u5f02\u6b65\u7f16\u7a0b\u7b49\u65b9\u9762\u7684\u5e94\u7528","permalink":"/redis-reading/blog/redis-ae-examples"},"nextItem":{"title":"MDX Blog Post","permalink":"/redis-reading/blog/mdx-blog-post"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\r\\n\\r\\nSimply add Markdown files (or folders) to the `blog` directory.\\r\\n\\r\\nRegular blog authors can be added to `authors.yml`.\\r\\n\\r\\nThe blog post date can be extracted from filenames, such as:\\r\\n\\r\\n- `2019-05-30-welcome.md`\\r\\n- `2019-05-30-welcome/index.md`\\r\\n\\r\\nA blog post folder can be convenient to co-locate blog post images:\\r\\n\\r\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\r\\n\\r\\nThe blog supports tags as well!\\r\\n\\r\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"mdx-blog-post","metadata":{"permalink":"/redis-reading/blog/mdx-blog-post","editUrl":"https://github.com/code-reading-lab/redis-reading/tree/docs/blog/2021-08-01-mdx-blog-post.mdx","source":"@site/blog/2021-08-01-mdx-blog-post.mdx","title":"MDX Blog Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2021-08-01T00:00:00.000Z","formattedDate":"August 1, 2021","tags":[{"label":"docusaurus","permalink":"/redis-reading/blog/tags/docusaurus"}],"readingTime":0.175,"hasTruncateMarker":false,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","imageURL":"https://github.com/slorber.png","key":"slorber"}],"frontMatter":{"slug":"mdx-blog-post","title":"MDX Blog Post","authors":["slorber"],"tags":["docusaurus"]},"prevItem":{"title":"Welcome","permalink":"/redis-reading/blog/welcome"},"nextItem":{"title":"Long Blog Post","permalink":"/redis-reading/blog/long-blog-post"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\r\\n\\r\\n:::tip\\r\\n\\r\\nUse the power of React to create interactive blog posts.\\r\\n\\r\\n```js\\r\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\r\\n```\\r\\n\\r\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\r\\n\\r\\n:::"},{"id":"long-blog-post","metadata":{"permalink":"/redis-reading/blog/long-blog-post","editUrl":"https://github.com/code-reading-lab/redis-reading/tree/docs/blog/2019-05-29-long-blog-post.md","source":"@site/blog/2019-05-29-long-blog-post.md","title":"Long Blog Post","description":"This is the summary of a very long blog post,","date":"2019-05-29T00:00:00.000Z","formattedDate":"May 29, 2019","tags":[{"label":"hello","permalink":"/redis-reading/blog/tags/hello"},{"label":"docusaurus","permalink":"/redis-reading/blog/tags/docusaurus"}],"readingTime":2.05,"hasTruncateMarker":true,"authors":[{"name":"Henry Tien","title":"SDE","url":"https://github.com/henrytien","imageURL":"https://github.com/henrytien.png","key":"henrytien"}],"frontMatter":{"slug":"long-blog-post","title":"Long Blog Post","authors":"henrytien","tags":["hello","docusaurus"]},"prevItem":{"title":"MDX Blog Post","permalink":"/redis-reading/blog/mdx-blog-post"}},"content":"This is the summary of a very long blog post,\\r\\n\\r\\nUse a `\x3c!--` `truncate` `--\x3e` comment to limit blog post size in the list view.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\r\\n\\r\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"}]}')}}]);